#!/usr/bin/env node

/**
 * –ü—Ä–æ—Å—Ç–æ–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ–∏—Å–∫–∞ —Ç–æ—Ä—Ä–µ–Ω—Ç–æ–≤
 * –ó–∞–ø—É—Å–∫: node test-search.js
 */

const { TorrentSearch } = require('./dist/TorrentSearch');

async function testSearch() {
  console.log('üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–∏—Å–∫–∞ —Ç–æ—Ä—Ä–µ–Ω—Ç–æ–≤...\n');
  
  const torrentSearch = new TorrentSearch();
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ —Ç—Ä–µ–∫–µ—Ä—ã
  console.log('üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ —Ç—Ä–µ–∫–µ—Ä—ã:', torrentSearch.getAvailableTrackers());
  
  // –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—É—Å—Ç–æ–π –∑–∞–ø—Ä–æ—Å
  console.log('\nüß™ –¢–µ—Å—Ç 1: –ü—É—Å—Ç–æ–π –∑–∞–ø—Ä–æ—Å');
  const emptyResult = await torrentSearch.search({ query: '', limit: 10 });
  console.log('–†–µ–∑—É–ª—å—Ç–∞—Ç:', emptyResult);
  
  // –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–µ–∞–ª—å–Ω—ã–π –ø–æ–∏—Å–∫
  console.log('\nüß™ –¢–µ—Å—Ç 2: –ü–æ–∏—Å–∫ "inception"');
  try {
    const startTime = Date.now();
    const result = await torrentSearch.search({ query: 'inception', limit: 5 });
    const executionTime = Date.now() - startTime;
    
    console.log(`‚è±Ô∏è  –í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: ${executionTime}ms`);
    console.log(`üìä –ù–∞–π–¥–µ–Ω–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤: ${result.total}`);
    console.log(`üîç –ó–∞–ø—Ä–æ—Å: "${result.query}"`);
    
    if (result.results.length > 0) {
      console.log('\nüìù –ü–µ—Ä–≤—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã:');
      result.results.slice(0, 3).forEach((torrent, index) => {
        console.log(`  ${index + 1}. ${torrent.title}`);
        console.log(`     –¢—Ä–µ–∫–µ—Ä: ${torrent.tracker}`);
        console.log(`     –†–∞–∑–º–µ—Ä: ${torrent.size}`);
        console.log(`     –°–∏–¥—ã: ${torrent.seeders}, –õ–∏—á–∏: ${torrent.leechers}`);
        console.log(`     Magnet: ${torrent.magnetUrl ? '–î–∞' : '–ù–µ—Ç'}`);
        console.log(`     Torrent: ${torrent.torrentUrl ? '–î–∞' : '–ù–µ—Ç'}`);
        console.log('');
      });
    } else {
      console.log('‚ùå –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã');
    }
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞:', error.message);
  }
  
  // –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–∏—Å–∫ —Å —Ñ–∏–ª—å—Ç—Ä–∞–º–∏
  console.log('\nüß™ –¢–µ—Å—Ç 3: –ü–æ–∏—Å–∫ "marvel" —Å —Ñ–∏–ª—å—Ç—Ä–æ–º "movie"');
  try {
    const result = await torrentSearch.search({ 
      query: 'marvel', 
      category: 'movie',
      limit: 3 
    });
    
    console.log(`üìä –ù–∞–π–¥–µ–Ω–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤: ${result.total}`);
    
    if (result.results.length > 0) {
      console.log('\nüìù –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å —Ñ–∏–ª—å—Ç—Ä–æ–º:');
      result.results.forEach((torrent, index) => {
        console.log(`  ${index + 1}. ${torrent.title} (${torrent.category})`);
      });
    }
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞ —Å —Ñ–∏–ª—å—Ç—Ä–∞–º–∏:', error.message);
  }
  
  console.log('\n‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ');
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
testSearch().catch(console.error);